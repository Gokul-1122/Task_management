{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gokul\\\\Downloads\\\\Task management\\\\Task management\\\\Frontend\\\\src\\\\components\\\\taskList.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import '../css/taskList.css';\n// import { FaTrash, FaSearch } from 'react-icons/fa';\n\n// const TaskList = () => {\n//   const [tasks, setTasks] = useState([]);\n//   const [projects, setProjects] = useState([]);\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [isSearchVisible, setIsSearchVisible] = useState(false);\n\n//   useEffect(() => {\n//     async function fetchData() {\n//       try {\n//         const tasksResponse = await fetch('http://localhost:3001/tasks/');\n//         const tasksData = await tasksResponse.json();\n//         setTasks(tasksData.tasks);\n\n//         const projectsResponse = await fetch('http://localhost:3001/projects/');\n//         const projectsData = await projectsResponse.json();\n//         setProjects(projectsData.projects);\n//       } catch (error) {\n//         console.error('Error:', error);\n//       }\n//     }\n\n//     fetchData();\n//   }, []); \n\n//   const handleTaskDelete = async (taskId) => {\n//     console.log(\"dlte\");\n//     try {\n//       await fetch(`http://localhost:3001/tasks/${taskId}`, {\n//         method: 'DELETE',\n//       });\n//       const updatedTasks = tasks.filter(task => task.id !== taskId);\n//       setTasks(updatedTasks);\n//     } catch (error) {\n//       console.error('Error deleting task:', error);\n//     }\n//   };\n\n//   const getProjectName = (projectId) => {\n//     console.log('Projects:', projects);\n//     const project = projects.find(project => project.id === projectId);\n//     console.log('Found Project:', project);\n//     console.log(projects.projectId);\n//     return project ? project.name : 'Unknown Project';\n//   };\n\n//   const handleStatusChange = async (taskId, status) => {\n//     try {\n//       const updatedTasks = tasks.map(task =>\n//         task.id === taskId ? { ...task, completed: status === 'completed' } : task\n//       );\n//       setTasks(updatedTasks);\n\n//       await fetch(`http://localhost:3001/tasks/${taskId}`, {\n//         method: 'PUT',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ completed: status === 'completed' }),\n//       });\n//     } catch (error) {\n//       console.error('Error updating task status:', error);\n//     }\n//   };\n\n//   const toggleSearchBar = () => {\n//     setIsSearchVisible(!isSearchVisible);\n//   };\n\n//   const filteredTasks = tasks.filter(task =>\n//     task.name.toLowerCase().includes(searchQuery.toLowerCase())||\n//     task.deadline.toLowerCase().includes(searchQuery.toLowerCase())\n//   );\n\n//   return (\n//     <div className=\"task-list\">\n//       <div className='search'>\n//         <button><FaSearch onClick={toggleSearchBar} /></button> \n//         {isSearchVisible && (\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search tasks...\"\n//             value={searchQuery}\n//             onChange={(e) => setSearchQuery(e.target.value)}\n//           />\n//         )}\n//       </div>\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Project Name</th>\n//             <th>Task Name</th>\n//             <th>Deadline</th>\n//             <th>Status</th>\n//             <th>Delete</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {filteredTasks.map(task => (\n//             <tr key={task.id}>\n//               <td>{getProjectName(task.project_id)}</td>\n//               <td>{task.name}</td>\n//               <td>{task.deadline}</td>\n//               <td>\n//                 <div className='status'>\n//                   <select \n//                     value={task.completed ? 'completed' : 'on-progress'}\n//                     onChange={(e) => handleStatusChange(task.id, e.target.value)}\n//                   >\n//                     <option value=\"on-progress\">On Progress</option>\n//                     <option value=\"completed\">Completed</option>\n//                   </select>\n//                 </div>\n\n//               </td>\n//               <td className=\"dlte-task\">\n//                 <button onClick={() => handleTaskDelete(task.id)}><FaTrash/></button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default TaskList;\n\nimport React, { useState, useEffect } from 'react';\nimport '../css/taskList.css';\nimport { FaTrash, FaSearch } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isSearchVisible, setIsSearchVisible] = useState(false);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const tasksResponse = await fetch('http://localhost:3001/tasks/');\n        const tasksData = await tasksResponse.json();\n        setTasks(tasksData.tasks);\n        const projectsResponse = await fetch('http://localhost:3001/projects/');\n        const projectsData = await projectsResponse.json();\n        setProjects(projectsData.projects);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n    fetchData();\n  }, []);\n  const handleTaskDelete = async taskId => {\n    try {\n      await fetch(`http://localhost:3001/tasks/${taskId}`, {\n        method: 'DELETE'\n      });\n      const updatedTasks = tasks.filter(task => task.id !== taskId);\n      setTasks(updatedTasks);\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const getProjectName = projectId => {\n    log;\n    const project = projects.find(project => project.id === projectId);\n    console.log('Projects:', projects);\n    console.log('Found Project:', project);\n    return project ? project.name : 'Unknown Project';\n  };\n  const handleStatusChange = async (taskId, status) => {\n    try {\n      const updatedTasks = tasks.map(task => task.id === taskId ? {\n        ...task,\n        completed: status === 'completed'\n      } : task);\n      setTasks(updatedTasks);\n      await fetch(`http://localhost:3001/tasks/${taskId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          completed: status === 'completed'\n        })\n      });\n      const taskResponse = await fetch(`http://localhost:3001/tasks/${taskId}`);\n      const taskData = await taskResponse.json();\n      const updatedTask = taskData.task;\n      const updatedTasksWithServerData = tasks.map(task => task.id === taskId ? updatedTask : task);\n      setTasks(updatedTasksWithServerData);\n    } catch (error) {\n      console.error('Error updating task status:', error);\n    }\n  };\n  const toggleSearchBar = () => {\n    setIsSearchVisible(!isSearchVisible);\n  };\n  const filteredTasks = tasks.filter(task => task.name.toLowerCase().includes(searchQuery.toLowerCase()) || task.deadline.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(FaSearch, {\n          onClick: toggleSearchBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), isSearchVisible && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search tasks...\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Project Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Deadline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: getProjectName(task.project_id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.deadline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: task.completed ? 'completed' : 'on-progress',\n                onChange: e => handleStatusChange(task.id, e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"on-progress\",\n                  children: \"On Progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"completed\",\n                  children: \"Completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"dlte-task\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleTaskDelete(task.id),\n              children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 67\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"vhbKCtljyT0KLeI+emwK8CX4XOM=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","FaTrash","FaSearch","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","projects","setProjects","searchQuery","setSearchQuery","isSearchVisible","setIsSearchVisible","fetchData","tasksResponse","fetch","tasksData","json","projectsResponse","projectsData","error","console","handleTaskDelete","taskId","method","updatedTasks","filter","task","id","getProjectName","projectId","log","project","find","name","handleStatusChange","status","map","completed","headers","body","JSON","stringify","taskResponse","taskData","updatedTask","updatedTasksWithServerData","toggleSearchBar","filteredTasks","toLowerCase","includes","deadline","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","project_id","_c","$RefreshReg$"],"sources":["C:/Users/Gokul/Downloads/Task management/Task management/Frontend/src/components/taskList.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import '../css/taskList.css';\r\n// import { FaTrash, FaSearch } from 'react-icons/fa';\r\n\r\n// const TaskList = () => {\r\n//   const [tasks, setTasks] = useState([]);\r\n//   const [projects, setProjects] = useState([]);\r\n//   const [searchQuery, setSearchQuery] = useState('');\r\n//   const [isSearchVisible, setIsSearchVisible] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     async function fetchData() {\r\n//       try {\r\n//         const tasksResponse = await fetch('http://localhost:3001/tasks/');\r\n//         const tasksData = await tasksResponse.json();\r\n//         setTasks(tasksData.tasks);\r\n\r\n//         const projectsResponse = await fetch('http://localhost:3001/projects/');\r\n//         const projectsData = await projectsResponse.json();\r\n//         setProjects(projectsData.projects);\r\n//       } catch (error) {\r\n//         console.error('Error:', error);\r\n//       }\r\n//     }\r\n\r\n//     fetchData();\r\n//   }, []); \r\n\r\n//   const handleTaskDelete = async (taskId) => {\r\n//     console.log(\"dlte\");\r\n//     try {\r\n//       await fetch(`http://localhost:3001/tasks/${taskId}`, {\r\n//         method: 'DELETE',\r\n//       });\r\n//       const updatedTasks = tasks.filter(task => task.id !== taskId);\r\n//       setTasks(updatedTasks);\r\n//     } catch (error) {\r\n//       console.error('Error deleting task:', error);\r\n//     }\r\n//   };\r\n  \r\n\r\n//   const getProjectName = (projectId) => {\r\n//     console.log('Projects:', projects);\r\n//     const project = projects.find(project => project.id === projectId);\r\n//     console.log('Found Project:', project);\r\n//     console.log(projects.projectId);\r\n//     return project ? project.name : 'Unknown Project';\r\n//   };\r\n  \r\n\r\n//   const handleStatusChange = async (taskId, status) => {\r\n//     try {\r\n//       const updatedTasks = tasks.map(task =>\r\n//         task.id === taskId ? { ...task, completed: status === 'completed' } : task\r\n//       );\r\n//       setTasks(updatedTasks);\r\n\r\n//       await fetch(`http://localhost:3001/tasks/${taskId}`, {\r\n//         method: 'PUT',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify({ completed: status === 'completed' }),\r\n//       });\r\n//     } catch (error) {\r\n//       console.error('Error updating task status:', error);\r\n//     }\r\n//   };\r\n\r\n//   const toggleSearchBar = () => {\r\n//     setIsSearchVisible(!isSearchVisible);\r\n//   };\r\n\r\n//   const filteredTasks = tasks.filter(task =>\r\n//     task.name.toLowerCase().includes(searchQuery.toLowerCase())||\r\n//     task.deadline.toLowerCase().includes(searchQuery.toLowerCase())\r\n//   );\r\n  \r\n//   return (\r\n//     <div className=\"task-list\">\r\n//       <div className='search'>\r\n//         <button><FaSearch onClick={toggleSearchBar} /></button> \r\n//         {isSearchVisible && (\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Search tasks...\"\r\n//             value={searchQuery}\r\n//             onChange={(e) => setSearchQuery(e.target.value)}\r\n//           />\r\n//         )}\r\n//       </div>\r\n//       <table>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Project Name</th>\r\n//             <th>Task Name</th>\r\n//             <th>Deadline</th>\r\n//             <th>Status</th>\r\n//             <th>Delete</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {filteredTasks.map(task => (\r\n//             <tr key={task.id}>\r\n//               <td>{getProjectName(task.project_id)}</td>\r\n//               <td>{task.name}</td>\r\n//               <td>{task.deadline}</td>\r\n//               <td>\r\n//                 <div className='status'>\r\n//                   <select \r\n//                     value={task.completed ? 'completed' : 'on-progress'}\r\n//                     onChange={(e) => handleStatusChange(task.id, e.target.value)}\r\n//                   >\r\n//                     <option value=\"on-progress\">On Progress</option>\r\n//                     <option value=\"completed\">Completed</option>\r\n//                   </select>\r\n//                 </div>\r\n                \r\n//               </td>\r\n//               <td className=\"dlte-task\">\r\n//                 <button onClick={() => handleTaskDelete(task.id)}><FaTrash/></button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TaskList;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../css/taskList.css';\r\nimport { FaTrash, FaSearch } from 'react-icons/fa';\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [isSearchVisible, setIsSearchVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const tasksResponse = await fetch('http://localhost:3001/tasks/');\r\n        const tasksData = await tasksResponse.json();\r\n        setTasks(tasksData.tasks);\r\n\r\n        const projectsResponse = await fetch('http://localhost:3001/projects/');\r\n        const projectsData = await projectsResponse.json();\r\n        setProjects(projectsData.projects);\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []); \r\n\r\n  const handleTaskDelete = async (taskId) => {\r\n    try {\r\n      await fetch(`http://localhost:3001/tasks/${taskId}`, {\r\n        method: 'DELETE',\r\n      });\r\n      const updatedTasks = tasks.filter(task => task.id !== taskId);\r\n      setTasks(updatedTasks);\r\n    } catch (error) {\r\n      console.error('Error deleting task:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const getProjectName = (projectId) => {\r\n    log\r\n    const project = projects.find(project => project.id === projectId);\r\n    console.log('Projects:', projects);\r\n    console.log('Found Project:', project);\r\n    return project ? project.name : 'Unknown Project';\r\n  };\r\n  \r\n\r\n  const handleStatusChange = async (taskId, status) => {\r\n    try {\r\n      const updatedTasks = tasks.map(task =>\r\n        task.id === taskId ? { ...task, completed: status === 'completed' } : task\r\n      );\r\n      setTasks(updatedTasks);\r\n  \r\n      await fetch(`http://localhost:3001/tasks/${taskId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ completed: status === 'completed' }),\r\n      });\r\n  \r\n     \r\n      const taskResponse = await fetch(`http://localhost:3001/tasks/${taskId}`);\r\n      const taskData = await taskResponse.json();\r\n      const updatedTask = taskData.task;\r\n  \r\n      const updatedTasksWithServerData = tasks.map(task =>\r\n        task.id === taskId ? updatedTask : task\r\n      );\r\n      setTasks(updatedTasksWithServerData);\r\n    } catch (error) {\r\n      console.error('Error updating task status:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const toggleSearchBar = () => {\r\n    setIsSearchVisible(!isSearchVisible);\r\n  };\r\n\r\n  const filteredTasks = tasks.filter(task =>\r\n    task.name.toLowerCase().includes(searchQuery.toLowerCase())||\r\n    task.deadline.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n  \r\n  return (\r\n    \r\n    <div className=\"task-list\">\r\n      <div className='search'>\r\n        <button><FaSearch onClick={toggleSearchBar} /></button> \r\n        {isSearchVisible && (\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search tasks...\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n          />\r\n        )}\r\n      </div>\r\n      <h2>Task List</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Project Name</th>\r\n            <th>Task Name</th>\r\n            <th>Deadline</th>\r\n            <th>Status</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredTasks.map(task => (\r\n            <tr key={task.id}>\r\n              <td>{getProjectName(task.project_id)}</td>\r\n              <td>{task.name}</td>\r\n              <td>{task.deadline}</td>\r\n              <td>\r\n                <div className='status'>\r\n                  <select \r\n                    value={task.completed ? 'completed' : 'on-progress'}\r\n                    onChange={(e) => handleStatusChange(task.id, e.target.value)}\r\n                  >\r\n                    <option value=\"on-progress\">On Progress</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                  </select>\r\n                </div>\r\n                \r\n              </td>\r\n              <td className=\"dlte-task\">\r\n                <button onClick={() => handleTaskDelete(task.id)}><FaTrash/></button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}