{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gokul\\\\Downloads\\\\Task management\\\\Task management\\\\Frontend\\\\src\\\\forms\\\\taskForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"../css/taskform.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  projects,\n  addTask\n}) => {\n  _s();\n  var _projects$;\n  const [selectedProject, setSelectedProject] = useState((_projects$ = projects[0]) === null || _projects$ === void 0 ? void 0 : _projects$.id);\n  const [taskName, setTaskName] = useState('');\n  const [deadline, setDeadline] = useState('');\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (taskName.trim() !== '' && deadline.trim() !== '') {\n      try {\n        const response = await fetch('http://localhost:3001/tasks', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            project_id: selectedProject,\n            name: taskName,\n            deadline\n          })\n        });\n        const data = await response.json();\n        addTask(data.taskId);\n        setTaskName('');\n        setDeadline('');\n        setError(null); // Reset error state on successful submission\n      } catch (error) {\n        setError('Error adding task');\n        console.error('Error:', error);\n      }\n    }\n  };\n  const handleReload = () => {\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"task-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Project:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedProject,\n        onChange: e => setSelectedProject(e.target.value),\n        children: projects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: project.id,\n          children: project.name\n        }, project.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Task Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: taskName,\n        onChange: e => setTaskName(e.target.value),\n        placeholder: \"Enter task name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Deadline:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: deadline,\n        onChange: e => setDeadline(e.target.value),\n        placeholder: \"Enter deadline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addtask\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReload,\n        type: \"submit\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"vXdr1SSu3rXwU9Whi+cAvovyH20=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskForm","projects","addTask","_s","_projects$","selectedProject","setSelectedProject","id","taskName","setTaskName","deadline","setDeadline","error","setError","handleSubmit","e","preventDefault","trim","response","fetch","method","headers","body","JSON","stringify","project_id","name","data","json","taskId","console","handleReload","window","location","reload","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","map","project","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Gokul/Downloads/Task management/Task management/Frontend/src/forms/taskForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"../css/taskform.css\";\r\n\r\nconst TaskForm = ({ projects, addTask }) => {\r\n  const [selectedProject, setSelectedProject] = useState(projects[0]?.id);\r\n  const [taskName, setTaskName] = useState('');\r\n  const [deadline, setDeadline] = useState('');\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (taskName.trim() !== '' && deadline.trim() !== '') {\r\n      try {\r\n        const response = await fetch('http://localhost:3001/tasks', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            project_id: selectedProject,\r\n            name: taskName,\r\n            deadline\r\n          })\r\n        });\r\n        const data = await response.json();\r\n        addTask(data.taskId);\r\n        setTaskName('');\r\n        setDeadline('');\r\n        setError(null); // Reset error state on successful submission\r\n      } catch (error) {\r\n        setError('Error adding task');\r\n        console.error('Error:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleReload = () => {\r\n    window.location.reload();\r\n  };\r\n  \r\n\r\n  return (\r\n    <form className=\"task-form\" onSubmit={handleSubmit}>\r\n      <h2>Add Task</h2>\r\n      <div className=\"form-group\">\r\n        <label>Select Project:</label>\r\n        <select\r\n          value={selectedProject}\r\n          onChange={e => setSelectedProject(e.target.value)}\r\n        >\r\n          {projects.map(project => (\r\n            <option key={project.id} value={project.id}>\r\n              {project.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Task Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={taskName}\r\n          onChange={e => setTaskName(e.target.value)}\r\n          placeholder=\"Enter task name\"\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Deadline:</label>\r\n        <input\r\n          type=\"date\"\r\n          value={deadline}\r\n          onChange={e => setDeadline(e.target.value)}\r\n          placeholder=\"Enter deadline\"\r\n        />\r\n      </div>\r\n      <div className='addtask'>\r\n        <button onClick={handleReload} type=\"submit\">Add Task</button>\r\n      </div>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}