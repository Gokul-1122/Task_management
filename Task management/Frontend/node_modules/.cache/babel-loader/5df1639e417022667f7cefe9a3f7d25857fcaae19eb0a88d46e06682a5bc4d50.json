{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gokul\\\\Downloads\\\\Task management\\\\Task management\\\\Frontend\\\\src\\\\layout\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProjectForm from '../forms/ProjectForm';\nimport ProjectList from '../components/projectList';\nimport TaskForm from '../forms/taskForm';\nimport TaskList from '../components/taskList';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Dashboard = () => {\n  _s();\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchProjectsAndTasks = async () => {\n      try {\n        const projectsResponse = await fetch('http://localhost:3001/projects');\n        const projectsData = await projectsResponse.json();\n        setProjects(projectsData.projects);\n        const tasksResponse = await fetch('http://localhost:3001/tasks');\n        const tasksData = await tasksResponse.json();\n        setTasks(tasksData.tasks);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchProjectsAndTasks();\n  }, []);\n  const handleProjectSelect = projectId => {\n    setSelectedProject(projectId);\n  };\n  const handleClearProjectSelection = () => {\n    setSelectedProject(null);\n  };\n  const addProject = async projectName => {\n    try {\n      const response = await fetch('http://localhost:3001/projects', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: projectName\n        })\n      });\n      const data = await response.json();\n      const newProject = {\n        id: data.projectId,\n        name: projectName\n      };\n      setProjects([...projects, newProject]);\n    } catch (error) {\n      console.error('Error adding project:', error);\n    }\n  };\n  const handleProjectDelete = async projectId => {\n    try {\n      await fetch(`http://localhost:3001/projects/${projectId}`, {\n        method: 'DELETE'\n      });\n      const updatedProjects = projects.filter(project => project.id !== projectId);\n      setProjects(updatedProjects);\n    } catch (error) {\n      console.error('Error deleting project:', error);\n    }\n  };\n  const addTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:3001/tasks/${taskId}`);\n      const data = await response.json();\n      const newTask = {\n        id: data.taskId,\n        project_id: selectedProject,\n        name: data.name,\n        deadline: data.deadline,\n        completed: false\n      };\n      setTasks([...tasks, newTask]);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const deleteTask = async taskId => {\n    try {\n      await fetch(`http://localhost:3001/tasks/${taskId}`, {\n        method: 'DELETE'\n      });\n      setTasks(tasks.filter(task => task.id !== taskId));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-section\",\n        children: [/*#__PURE__*/_jsxDEV(ProjectForm, {\n          addProject: addProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ProjectList, {\n          deleteProject: handleProjectDelete,\n          handleProjectSelect: handleProjectSelect,\n          selectedProject: selectedProject,\n          handleClearProjectSelection: handleClearProjectSelection,\n          projects: projects\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-section\",\n        children: [selectedProject && /*#__PURE__*/_jsxDEV(TaskForm, {\n          projects: projects,\n          addTask: addTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n          projects: projects,\n          addTask: addTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n          projectId: selectedProject,\n          tasks: tasks,\n          deleteTask: deleteTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 7\n  }, this);\n};\n_s(Dashboard, \"KV/F+JNaxy+GFGqUYQNEE+b3mMs=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","ProjectForm","ProjectList","TaskForm","TaskList","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","selectedProject","setSelectedProject","projects","setProjects","tasks","setTasks","fetchProjectsAndTasks","projectsResponse","fetch","projectsData","json","tasksResponse","tasksData","error","console","handleProjectSelect","projectId","handleClearProjectSelection","addProject","projectName","response","method","headers","body","JSON","stringify","name","data","newProject","id","handleProjectDelete","updatedProjects","filter","project","addTask","taskId","newTask","project_id","deadline","completed","deleteTask","task","className","children","fileName","_jsxFileName","lineNumber","columnNumber","deleteProject","_c","$RefreshReg$"],"sources":["C:/Users/Gokul/Downloads/Task management/Task management/Frontend/src/layout/dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ProjectForm from '../forms/ProjectForm';\r\nimport ProjectList from '../components/projectList';\r\nimport TaskForm from '../forms/taskForm';\r\nimport TaskList from '../components/taskList';\r\nimport '../App.css';\r\n\r\n\r\nexport const Dashboard = () => {\r\n    const [selectedProject, setSelectedProject] = useState(null);\r\n    const [projects, setProjects] = useState([]);\r\n    const [tasks, setTasks] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      const fetchProjectsAndTasks = async () => {\r\n        try {\r\n          const projectsResponse = await fetch('http://localhost:3001/projects');\r\n          const projectsData = await projectsResponse.json();\r\n          setProjects(projectsData.projects);\r\n  \r\n          const tasksResponse = await fetch('http://localhost:3001/tasks');\r\n          const tasksData = await tasksResponse.json();\r\n          setTasks(tasksData.tasks);\r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        }\r\n      };\r\n  \r\n      fetchProjectsAndTasks();\r\n    }, []);\r\n  \r\n    const handleProjectSelect = (projectId) => {\r\n      setSelectedProject(projectId);\r\n    };\r\n  \r\n    const handleClearProjectSelection = () => {\r\n      setSelectedProject(null);\r\n    };\r\n  \r\n    const addProject = async (projectName) => {\r\n      try {\r\n        const response = await fetch('http://localhost:3001/projects', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ name: projectName }),\r\n        });\r\n        \r\n        const data = await response.json();\r\n        const newProject = { id: data.projectId, name: projectName };\r\n        setProjects([...projects, newProject]);\r\n      } catch (error) {\r\n        console.error('Error adding project:', error);\r\n      }\r\n    };\r\n  \r\n    const handleProjectDelete = async (projectId) => {\r\n      try {\r\n        await fetch(`http://localhost:3001/projects/${projectId}`, {\r\n          method: 'DELETE',\r\n        });\r\n    \r\n        const updatedProjects = projects.filter(project => project.id !== projectId);\r\n        setProjects(updatedProjects);\r\n      } catch (error) {\r\n        console.error('Error deleting project:', error);\r\n      }\r\n    };\r\n    \r\n  \r\n    const addTask = async (taskId) => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3001/tasks/${taskId}`);\r\n        const data = await response.json();\r\n        const newTask = { id: data.taskId, project_id: selectedProject, name: data.name, deadline: data.deadline, completed: false };\r\n        setTasks([...tasks, newTask]);\r\n      } catch (error) {\r\n        console.error('Error adding task:', error);\r\n      }\r\n    };\r\n  \r\n    const deleteTask = async (taskId) => {\r\n      try {\r\n        await fetch(`http://localhost:3001/tasks/${taskId}`, {\r\n          method: 'DELETE',\r\n        });\r\n        setTasks(tasks.filter(task => task.id !== taskId));\r\n      } catch (error) {\r\n        console.error('Error deleting task:', error);\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div className=\"App\">\r\n          <>\r\n            <div className=\"project-section\">\r\n              <ProjectForm addProject={addProject} />\r\n              <ProjectList\r\n                deleteProject={handleProjectDelete} \r\n                handleProjectSelect={handleProjectSelect}\r\n                selectedProject={selectedProject}\r\n                handleClearProjectSelection={handleClearProjectSelection}\r\n                projects={projects}\r\n              />\r\n            </div>\r\n            <div className=\"task-section\">\r\n              {selectedProject && <TaskForm projects={projects} addTask={addTask} />}\r\n              <TaskForm projects={projects} addTask={addTask} />\r\n              <TaskList\r\n                projectId={selectedProject}\r\n                tasks={tasks}\r\n                deleteTask={deleteTask}\r\n              />\r\n            </div>\r\n          </>\r\n      </div>\r\n    );\r\n}\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}