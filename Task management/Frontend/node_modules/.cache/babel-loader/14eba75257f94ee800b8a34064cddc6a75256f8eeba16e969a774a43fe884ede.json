{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gokul\\\\Downloads\\\\Task management\\\\Task management\\\\Frontend\\\\src\\\\forms\\\\ProjectForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"../css/ProjectForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectForm = ({\n  addProject\n}) => {\n  _s();\n  const [projectName, setProjectName] = useState('');\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (projectName.trim() !== '') {\n      try {\n        const response = await fetch('http://localhost:3001/projects', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: projectName\n          })\n        });\n        response.json;\n        // addProject(data.projectId);\n        setProjectName('');\n        setError(null); // Reset error state on successful submission\n      } catch (error) {\n        setError('Error adding project');\n        console.error('Error:', error);\n      }\n    }\n  };\n  const handleReload = () => {\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"project-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-groupp\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Project Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: projectName,\n        onChange: e => setProjectName(e.target.value),\n        placeholder: \"Enter project name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addproject\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReload,\n        type: \"submit\",\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectForm, \"E5SbhJx4C82wjG+oqEXDp3gOs3U=\");\n_c = ProjectForm;\nexport default ProjectForm;\nvar _c;\n$RefreshReg$(_c, \"ProjectForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ProjectForm","addProject","_s","projectName","setProjectName","error","setError","handleSubmit","e","preventDefault","trim","response","fetch","method","headers","body","JSON","stringify","name","json","console","handleReload","window","location","reload","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Gokul/Downloads/Task management/Task management/Frontend/src/forms/ProjectForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"../css/ProjectForm.css\";\r\n\r\nconst ProjectForm = ({ addProject }) => {\r\n  const [projectName, setProjectName] = useState('');\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (projectName.trim() !== '') {\r\n      try {\r\n        const response = await fetch('http://localhost:3001/projects', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            name: projectName\r\n          })\r\n        });\r\n        response.json\r\n        // addProject(data.projectId);\r\n        setProjectName('');\r\n        setError(null); // Reset error state on successful submission\r\n      } catch (error) {\r\n        setError('Error adding project');\r\n        console.error('Error:', error);\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n  const handleReload = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <form className=\"project-form\" onSubmit={handleSubmit}>\r\n      <h2>Add Project</h2>\r\n      <div className=\"form-groupp\">\r\n        <label>Project Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={projectName}\r\n          onChange={e => setProjectName(e.target.value)}\r\n          placeholder=\"Enter project name\"\r\n        />\r\n      </div>\r\n      <div className='addproject'>\r\n        <button onClick={handleReload} type=\"submit\">Add Project</button>\r\n      </div>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProjectForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}